{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/comments.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","commentsService","formBuilder","title","comments","checkoutForm","group","text","getAllComments","comment","createComment","commentRes","push","deleteComment","selector","templateUrl","styleUrls","providers","AppModule","declarations","imports","bootstrap","CommentsService","http","ready","get","toPromise","res","baseUrl","post","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","<div class=\"container\">\n  <h1><img src=\"assets/bit-logo_mit_claim_cmyk_96dpi_freigestellt.png\"> News</h1>\n  \n  <p>\n    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n    Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat.   \n    Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi.   \n    Nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum. Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.   \n  </p>\n  <h2>Kommentare</h2>\n  <div *ngFor=\"let comment of comments\">\n    <ngb-toast [header]=\"comment.title\" [autohide]=\"false\" (hide)=\"deleteComment(comment.id)\">\n      {{comment.text}}\n    </ngb-toast>\n  </div>\n  <div *ngIf=\"comments.length === 0\">\n    Keine Kommentare vorhanden\n  </div>\n  <h5>Neuen Kommentar verfassen</h5>\n  <form [formGroup]=\"checkoutForm\" (ngSubmit)=\"createComment(checkoutForm.value)\">\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">Titel</label>\n      <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Titel des Kommentars\" formControlName=\"title\">\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputPassword1\">Inhalt</label>\n      <textarea type=\"text\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Schreibe deinen Kommentar\" formControlName=\"text\"></textarea>\n    </div>\n    <button type=\"text\" class=\"btn btn-primary\">Senden</button>\n  </form>\n</div>\n\n\n","import { Component } from '@angular/core';\nimport { CommentsService } from './comments.service';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [CommentsService]\n})\nexport class AppComponent {\n  title = 'bit-tutorial-frontend';\n\n  comments = [];\n  checkoutForm;\n\n  constructor(\n    private commentsService: CommentsService,\n    private formBuilder: FormBuilder\n  ) {\n    this.checkoutForm = this.formBuilder.group({\n      title: '',\n      text: ''\n    });\n  }\n\n  public async ngOnInit() {\n    this.comments = await this.commentsService.getAllComments();\n  }\n\n  public async createComment(comment) {\n    const commentRes = await this.commentsService.createComment(comment);\n    this.comments.push(commentRes);\n  }\n\n  public async deleteComment(id) {\n    await this.commentsService.deleteComment(id);\n    this.comments = await this.commentsService.getAllComments();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsService {\n\n  baseUrl;\n  ready: Promise<any>;\n\n  constructor(\n    private http: HttpClient\n  ) {\n    this.ready = http.get('/assets/config.json').toPromise().then((res: any) => {\n      this.baseUrl = res.baseUrl;\n    });\n  }\n\n  public async getAllComments(): Promise<any> {\n    await this.ready;\n    const res = await this.http.get(this.baseUrl + '/api/comments').toPromise();\n    return res;\n  }\n\n  public async createComment(comment) {\n    await this.ready;\n    const res = await this.http.post(this.baseUrl + '/api/comments', comment).toPromise();\n    return res;\n  }\n\n  public async deleteComment(id) {\n    await this.ready;\n    await this.http.delete(this.baseUrl + '/api/comments/' + id).toPromise();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}